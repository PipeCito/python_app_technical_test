name: Build and release to Cloud Run
on:
  push:
    branches:
      - master
  workflow_dispatch:
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: PYTHONPATH=. pytest --import-mode=importlib

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: test auth
        run: gcloud config list account --format "value(core.account)"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker authentication
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Build image
        run: docker build -t ${{ secrets.GCP_ARTIFACT_REGISTRY }}/${{ github.event.repository.name }}:${{ steps.vars.outputs.sha_short }} .

      - name: Push image
        run: docker push ${{ secrets.GCP_ARTIFACT_REGISTRY }}/${{ github.event.repository.name }}:${{ steps.vars.outputs.sha_short }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy python-app-technical-test \
            --image ${{ secrets.GCP_ARTIFACT_REGISTRY }}/${{ github.event.repository.name }}:${{ steps.vars.outputs.sha_short }} \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 5000 \
            --cpu 1 \
            --memory 512Mi \
            --concurrency 80 \
            --max-instances 10 \
            --min-instances 0 \
            --timeout 300s \
            --execution-environment gen2